rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Función auxiliar para verificar autenticación
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Función para verificar si es admin desde la base de datos
    function isAdminFromDB() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Función para verificar si es manager desde la base de datos
    function isManagerFromDB() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager';
    }

    // Reglas para usuarios
    match /users/{userId} {
      // Lectura: cualquier usuario autenticado puede leer
      allow read: if isAuthenticated();
      
      // Creación: solo Cloud Functions (no permitir desde cliente)
      allow create: if false;
      
      // Actualización: admin desde DB o el propio usuario para sus datos básicos
      allow update: if isAuthenticated() && 
        (isAdminFromDB() || 
         (userId == request.auth.uid && 
          !('role' in request.resource.data.diff(resource.data).affectedKeys())));
      
      // Eliminación: solo admins verificados desde DB
      allow delete: if isAuthenticated() && isAdminFromDB();
    }

    // Reglas para inventario
    match /inventario/{itemId} {
      allow read: if isAuthenticated();
      allow create, update: if isAuthenticated();
      allow delete: if isAuthenticated() && (isAdminFromDB() || isManagerFromDB());
    }

    // Reglas para turnos/shifts
    match /shifts/{shiftId} {
      allow read: if isAuthenticated();
      allow create, update: if isAuthenticated();
      allow delete: if isAuthenticated() && (isAdminFromDB() || isManagerFromDB());
    }

    // Reglas para proveedores
    match /providers/{providerId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated() && (isAdminFromDB() || isManagerFromDB());
    }

    // Reglas para mensajes
    match /messages/{messageId} {
      allow read, write: if isAuthenticated();
    }

    // Reglas para notas de turno
    match /shift_notes/{noteId} {
      allow read, write: if isAuthenticated();
    }

    // Reglas para intercambios de turno
    match /shift_swaps/{swapId} {
      allow read, write: if isAuthenticated();
    }

    // Reglas para horarios publicados (enlaces públicos)
    match /published_schedules/{scheduleId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }

    // Reglas para notificaciones
    match /notifications/{notificationId} {
      allow read, write: if isAuthenticated();
    }
  }
}